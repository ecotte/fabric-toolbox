// KQL script
// Use management commands in this script to configure your database items, such as tables, functions, materialized views, and more.


.create-merge table sparklens_metadata (applicationId:string, applicationName:string, artifactId:string, artifactType:string, capacityId:string, executorMax:string, executorMin:string, fabricEnvId:string, fabricLivyId:string, fabricTenantId:string, fabricWorkspaceId:string, isHighConcurrencyEnabled:string, ['spark.native.enabled']:string) 
.create-merge table sparklens_summary (stage_id:long, stage_attempt_id:long, num_tasks:long, successful_tasks:long, failed_tasks:long, min_duration_sec:real, max_duration_sec:real, avg_duration_sec:real, p75_duration_sec:real, avg_shuffle_read_mb:real, max_shuffle_read_mb:real, avg_shuffle_read_records:real, max_shuffle_read_records:long, avg_shuffle_write_mb:real, max_shuffle_write_mb:real, avg_shuffle_write_records:real, max_shuffle_write_records:long, avg_input_mb:real, max_input_mb:real, avg_input_records:real, max_input_records:long, avg_output_mb:real, max_output_mb:real, avg_output_records:real, max_output_records:long, min_launch_time:long, max_finish_time:long, num_executors:long, stage_execution_time_sec:real) 
.create-merge table sparklens_metrics (app_id:string, metric:string, value:real) 
.create-merge table sparklens_predictions (['Executor Count']:long, ['Executor Multiplier']:string, ['Estimated Executor WallClock']:string, ['Estimated Total Duration']:string) 
.create-merge table sparklens_recommedations (app_id:string, recommendation:string) 
.create-merge table RawLogs (timestamp:datetime, category:string, fabricLivyId:guid, applicationId:string, applicationName:string, executorId:string, userId:guid, fabricTenantId:guid, capacityId:guid, artifactType:string, artifactId:guid, fabricWorkspaceId:guid, fabricEnvId:guid, executorMin:long, executorMax:long, isHighConcurrencyEnabled:bool, properties:dynamic) 
.create-or-alter table RawLogs ingestion json mapping 'RawLogs_mapping'
```
[{"Properties":{"Path":"$['timestamp']"},"column":"timestamp","datatype":""},{"Properties":{"Path":"$['category']"},"column":"category","datatype":""},{"Properties":{"Path":"$['fabricLivyId']"},"column":"fabricLivyId","datatype":""},{"Properties":{"Path":"$['applicationId']"},"column":"applicationId","datatype":""},{"Properties":{"Path":"$['applicationName']"},"column":"applicationName","datatype":""},{"Properties":{"Path":"$['executorId']"},"column":"executorId","datatype":""},{"Properties":{"Path":"$['userId']"},"column":"userId","datatype":""},{"Properties":{"Path":"$['fabricTenantId']"},"column":"fabricTenantId","datatype":""},{"Properties":{"Path":"$['capacityId']"},"column":"capacityId","datatype":""},{"Properties":{"Path":"$['artifactType']"},"column":"artifactType","datatype":""},{"Properties":{"Path":"$['artifactId']"},"column":"artifactId","datatype":""},{"Properties":{"Path":"$['fabricWorkspaceId']"},"column":"fabricWorkspaceId","datatype":""},{"Properties":{"Path":"$['fabricEnvId']"},"column":"fabricEnvId","datatype":""},{"Properties":{"Path":"$['executorMin']"},"column":"executorMin","datatype":""},{"Properties":{"Path":"$['executorMax']"},"column":"executorMax","datatype":""},{"Properties":{"Path":"$['isHighConcurrencyEnabled']"},"column":"isHighConcurrencyEnabled","datatype":""},{"Properties":{"Path":"$['properties']"},"column":"properties","datatype":""}]
```
.alter table RawLogs policy retention @'{"SoftDeletePeriod":"730.00:00:00","Recoverability":"Enabled"}'
.alter table RawLogs policy caching hotdata = time(1.00:00:00) hotindex = time(1.00:00:00)
